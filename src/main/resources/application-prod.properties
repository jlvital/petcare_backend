# ╔══════════════════════════════════════════════════╗
# ║             Production Server Port              ║
# ╚══════════════════════════════════════════════════╝
server.port=${PORT:8080}

# ╔══════════════════════════════════════════════════╗
# ║             MariaDB (comentado por defecto)     ║
# ╚══════════════════════════════════════════════════╝
# spring.datasource.url=jdbc:mariadb://${DB_HOST}:${DB_PORT}/${DB_NAME}?useSSL=false&allowPublicKeyRetrieval=true
# spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# spring.datasource.username=${DB_USERNAME}
# spring.datasource.password=${DB_PASSWORD}
# spring.jpa.database-platform=org.hibernate.community.dialect.MariaDBLegacyDialect

# ╔══════════════════════════════════════════════════╗
# ║            PostgreSQL Configuration             ║
# ╚══════════════════════════════════════════════════╝
spring.datasource.url=${DATABASE_URL}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${PG_USER}
spring.datasource.password=${PG_PASS}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# ╔══════════════════════════════════════════════════╗
# ║          Connection Pool (HikariCP)             ║
# ╚══════════════════════════════════════════════════╝
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# ╔══════════════════════════════════════════════════╗
# ║                 JPA Settings                    ║
# ╚══════════════════════════════════════════════════╝
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.open-in-view=false

# ╔══════════════════════════════════════════════════╗
# ║        Thymeleaf Templates (Production)         ║
# ╚══════════════════════════════════════════════════╝
spring.thymeleaf.prefix=classpath:/templates/email/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true

# ╔══════════════════════════════════════════════════╗
# ║            Email SMTP (Production)              ║
# ╚══════════════════════════════════════════════════╝
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.default-encoding=UTF-8

# ╔══════════════════════════════════════════════════╗
# ║           OAuth2 Google Login (Production)      ║
# ╚══════════════════════════════════════════════════╝
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri=https://portal.petcare360.com/login/oauth2/code/google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=name
